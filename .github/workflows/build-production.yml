# This is a basic workflow to help you get started with Actions

name: Build production

on:
  push:
    branches:
      - master

jobs:
  build-funixbot-discord-and-restart-prod:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: import_gpg
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push funixbot discord api pterodactyl dockerfile
        run: |
          docker build . --tag ghcr.io/funixproductions/funixbot-discord-pteroq:latest -f pterodactyl-discord.Dockerfile
          docker push ghcr.io/funixproductions/funixbot-discord-pteroq:latest

      - name: Send start signal to restart funixbot discord with new version
        run: |
          curl "https://${{ secrets.PTERODACTYL_DOMAIN }}/api/client/servers/40595d4c/power?signal=restart" \
            -X POST \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_API_KEY }}'

  build-funixbot-twitch-and-restart-prod:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: import_gpg
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push funixbot twitch api pterodactyl dockerfile
        run: |
          docker build . --tag ghcr.io/funixproductions/funixbot-twitch-pteroq:latest -f pterodactyl-twitch.Dockerfile
          docker push ghcr.io/funixproductions/funixbot-twitch-pteroq:latest

      - name: Send start signal to restart funixbot twitch with new version
        run: |
          curl "https://${{ secrets.PTERODACTYL_DOMAIN }}/api/client/servers/a5e21e60/power?signal=restart" \
            -X POST \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ secrets.PTERODACTYL_API_KEY }}'

  send-success-build-discord-notif:
    needs:
      - build-funixbot-twitch-and-restart-prod
      - build-funixbot-discord-and-restart-prod

    runs-on: ubuntu-latest

    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_CI_STATUS }}
          DISCORD_USERNAME: FunixBot-Deploy
          DISCORD_AVATAR: https://avatars.githubusercontent.com/u/99349214?s=200&v=4
        uses: Ilshidur/action-discord@master
        with:
          args: '✅ FunixBot à été déployé sur pterodactyl !'
